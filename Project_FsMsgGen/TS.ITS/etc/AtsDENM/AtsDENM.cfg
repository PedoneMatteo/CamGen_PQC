
[MODULE_PARAMETERS]
# This section shall contain the values of all parameters that are defined in your TTCN-3 modules.

# IUT Station ID
LibItsCommon_Pixits.PX_IUT_STATION_ID := 2533729309

LibItsGeoNetworking_Pixits.PX_GN_UPPER_LAYER := e_btpB
LibItsDenm_Pics.PICS_IS_IUT_SECURED := true

[LOGGING]
# In this section you can specify the name of the log file and the classes of events
# you want to log into the file or display on console (standard error).

LogFile := "../logs/AtsDENM/%e.%h-%r.%s"
FileMask := LOG_ALL | USER | DEBUG | MATCHING
ConsoleMask := LOG_ALL | USER | DEBUG | MATCHING
#FileMask := ERROR | USER | MATCHING | EXECUTOR_RUNTIME | VERDICTOP
#ConsoleMask := ERROR | USER | MATCHING | EXECUTOR_RUNTIME | VERDICTOP
LogSourceInfo := Stack
LogEntityName:= Yes
LogEventTypes:= Yes
#TimeStampFormat := DateTime

[TESTPORT_PARAMETERS]
# In this section you can specify parameters that are passed to Test Ports.
# CAM Layer
#   next_header     : btpA|btpB (overwrite BTP.type)
#   header_type     : tsb|gbc
#   header_sub_type : sh (single hop)
# DENM Layer
#   next_header     : btpA|btpB (overwrite BTP.type)
#   header_type     : tsb|gbc
# BTP Layer
#   type            : btpA|btpB
#   destination port: dst_port
#   source port     : src_port
#   device_mode     : Set to 1 if the layer shall encapsulate upper layer PDU
#   device_mode     : Set to 1 if the layer shall encapsulate upper layer PDU
# GN Layer
#   ll_address             : GeoNetworking address of the Test System
#   latitude               : Latitude of the Test System
#   longitude              : Longitude of the Test System
#   beaconing              : Set to 1 if GnLayer shall start beaconing
#   expiry                 : Beaconing timer expiry (ms)
#   device_mode            : Set to 1 if the layer shall encapsulate upper layer PDU
#   secured_mode           : Set to 1 if message exchanges shall be signed
#   encrypted_mode         : Set to 1 if message exchanges shall be encrypted
#                            NOTE: For signed & encrypted message exchanges, both secured_mode and encrypted_mode shall be set to 1
#   sec_db_path            : Path to the certificates and keys storage location
#   hash                   : Hash algorithm to be used when secured mode is set
#                            Authorized values are SHA-256 or SHA-384
#                            Default: SHA-256
#   cypher                 : Cyphering algorithm to be used when secured mode is set
#                            Authorized values are NISTP-256 and BP-256
#                            Default: NISTP-256
# Ethernet layer
#   mac_src  :Source MAC address
#   mac_bc   :Broadcast address
#   eth_type : Ethernet type
# Commsignia layer
#   mac_src     : Device MAC address, used to discard packets
#                 To indicate no filering, use the value 000000000000
#   mac_bc      : Broadcast address
#   eth_type    : Ethernet type, used to discard packets
#   target_host : Device address
#   target_port : Device port
#   source_port : Test System port
#   interface_id: Interface id, used to discard packets
#   tx_power    : TX power (dB)
# UDP layer (IP/UDP based on Pcap)
#   dst_ip  : Destination IPv4 address (aa.bb.cc.dd)
#   dst_port: Destination port
#   src_ip  : Source IPv4 address (aa.bb.cc.dd)
#   src_port: Source port
# Pcap layer
#   mac_src    : Source MAC address, used to exclude from capture the acket sent by the Test System
#   filter     : Pcap filter (compliant with tcpdump syntax) 
#   Online mode:
#     nic: Local NIC
#          If set, online mode is used
#   Offline mode (nic is present but not set):
#     file        : File to read
#     frame_offset: Frame offset, used to skip packets with frame number < frame_offset
#     time_offset : Time offset, used to skip packets with time offset < time_offset
#     save_mode   : Set to 1 to save sent packet, 0 otherwise

system.denmPort.params := "DENM(next_header=btpB,header_type=tsb)/BTP(dst_port=2002)/GN(ll_address=4C5E0C14D2EA,latitude=515340240,longitude=139274330,distanceA=1500,distanceB=1500,angle=0,device_mode=1,secured_mode=1,sec_db_path=../data/certificates/certificates)/ETH(mac_src=8c554ac1eee0)/PCAP(mac_src=8c554ac1eee0,nic=wlp0s20f3,filter=and ether proto 0x8947)"

# DENM UpperTester port based on UDP
system.utPort.params := "UT_DENM/UDP(dst_ip=192.168.1.43,dst_port=12345,src_port=12346)"

[EXECUTE]
# Check that protocolVersion is set to 2 and messageID is set to 1
ItsDenm_TestCases.TC_DEN_MSGF_BV_01
# Check that sent DENM contains at least one 'trace' DE
#ItsDenm_TestCases.TC_DEN_MSGF_BV_02
# Check that DEN Basic Service generates a new DENM on reception of a valid AppDENM_Trigger request
#ItsDenm_TestCases.TC_DEN_EVGN_BV_01
# Check that a new ActionID value is assigned for each newly generated DENM
#ItsDenm_TestCases.TC_DEN_EVGN_BV_02
# Check that a newly created ActionID contains the StationID of the originating ITS-S that detected the event
#ItsDenm_TestCases.TC_DEN_EVGN_BV_03
# Check that Cause and subcause values included in DENM as provided by application
#ItsDenm_TestCases.TC_DEN_EVGN_BV_04
# Check that referenceTime is set to the current time when generating a DENM for a new event
#ItsDenm_TestCases.TC_DEN_EVGN_BV_05
# Check that sequenceNumber is set to a next unused value each time an event is detected
#ItsDenm_TestCases.TC_DEN_EVGN_BV_07
# Check that actionID are generated using newly assigned stationID when a pseudonym change occurs
#ItsDenm_TestCases.TC_DEN_EVGN_BV_10
# Check that DEN Basic Service generates an update DENM on reception of a valid AppDENM_update request
#ItsDenm_TestCases.TC_DEN_EVUP_BV_01
# Check that the actionID is not changed by DENM update, as long as the stationID of the originating ITS-S remains unchanged
#ItsDenm_TestCases.TC_DEN_EVUP_BV_02
# Check that referenceTime is set to the current time when generating a DENM for an updated eventCheck
#ItsDenm_TestCases.TC_DEN_EVUP_BV_03
# Check that DEN Basic Service does not send any update DENM if actionID is not in originating ITS-S message table
#ItsDenm_TestCases.TC_DEN_EVUP_BO_04
# Check that DEN Basic Service generates a cancellation DENM when application indicates the premature termination of an event for which it is the originator
#ItsDenm_TestCases.TC_DEN_EVTR_BV_01
# Check that DEN Basic Service generates a negation DENM when application indicates the premature termination of an event for which it is not the originator
#ItsDenm_TestCases.TC_DEN_EVTR_BV_02
# Check that referenceTime is set to the latest value received for this event in negation DENM
#ItsDenm_TestCases.TC_DEN_EVTR_BV_03
# Check that situation container, location container  and alacarte container are not present in a cancellation DENM
#ItsDenm_TestCases.TC_DEN_EVTR_BV_04
# Check that situation container, location container and alacarte container are not present in a negation DENM
#ItsDenm_TestCases.TC_DEN_EVTR_BV_05
# Check that DEN Basic Service does not send any termination DENM if actionID is not in originating ITS-S message table or receiving ITS-S message table (own stationID)
#ItsDenm_TestCases.TC_DEN_EVTR_BO_06
# Check that DEN Basic Service does not send any termination DENM if actionID is not in originating ITS-S message table or receiving ITS-S message table (other stationID)
#ItsDenm_TestCases.TC_DEN_EVTR_BO_07
# Check that referenceTime is set to to the current time when generating a cancellation DENM
#ItsDenm_TestCases.TC_DEN_EVTR_BV_08
# Check that DEN Basic Sercive repeats DENM transmission according to repetitionInterval parameter provided by application
#ItsDenm_TestCases.TC_DEN_EVRP_TI_01
# Check that the repeated DENM is always the most up-to-date message
#ItsDenm_TestCases.TC_DEN_EVRP_BV_02
# Check that DEN Basic Service stops retransmitting DENM after event’s validityDuration expiration
#ItsDenm_TestCases.TC_DEN_EVRP_BV_03
# Check that DEN Basic Service stops retransmitting DENM after event’s repetitionDuration expiration
#ItsDenm_TestCases.TC_DEN_EVRP_BV_04
# Check that DEN Basic Service does not repeat transmission of DENM if repetitionInterval is not provided by application
#ItsDenm_TestCases.TC_DEN_EVRP_BV_05
# Check that DEN Basic Service does not repeat transmission of DENM if repetitionDuration is not provided by application
#ItsDenm_TestCases.TC_DEN_EVRP_BV_06
# Check that existing actionID in originating ITS-S are updated when stationID is modified
#ItsDenm_TestCases.TC_DEN_EVRP_BV_08
# Check that actionID is not modified in repetitions of DENM if stationID is not modified
#ItsDenm_TestCases.TC_DEN_EVRP_BV_09
# Check that actionID is not modified in repetitions of DENM if stationID is not modified
#ItsDenm_TestCases.TC_DEN_EVRP_BV_10
# Check that DEN Basic Service stops retransmitting DENM after event's validityDuration expiration, when validityDuration was not provided
#ItsDenm_TestCases.TC_DEN_EVRP_BV_11
# Check that DENM is encapsulated in BTP type B packet
#ItsDenm_TestCases.TC_DEN_PAR_BV_01
# Check that DENM is encapsulated in a GBC packet
#ItsDenm_TestCases.TC_DEN_PAR_BV_02
# Check that IUT does not send a DENM if it is not permitted by signing certificate
#ItsDenm_TestCases.TC_DEN_SSP_BV_01_01
# Check that IUT does not send a DENM if it is not permitted by signing certificate
#ItsDenm_TestCases.TC_DEN_SSP_BV_01_02
# Check that receiving ITS-S transmits DENM to application if it concerns an unknown ActionID and if it is not a termination DENM
#ItsDenm_TestCases.TC_DEN_MSRV_BV_01
#Check that receiving ITS-S transmits DENM to application if it concerns a known ActionID and referenceTime is greater than highest value received for this ActionID
#ItsDenm_TestCases.TC_DEN_MSRV_BV_02
# Check that receiving ITS-S discards termination DENM if it concerns an unknown ActionID (own actionID)
#ItsDenm_TestCases.TC_DEN_MSRV_BO_03
# Check that receiving ITS-S discards termination DENM if it concerns an unknown ActionID (other actionID)
#ItsDenm_TestCases.TC_DEN_MSRV_BO_04
# Check that receiving ITS-S discards DENM if referenceTime is lower than highest value received for this ActionID
#ItsDenm_TestCases.TC_DEN_MSRV_BO_05
# Check that receiving ITS-S discards DENM if detectionTime is smaller than highest value received for this ActionID
#ItsDenm_TestCases.TC_DEN_MSRV_BO_06
# Check that receiving ITS-S transmits DENM to application if it concerns a known ActionID and referenceTime is equal to highest received value and detectionTime is more recent
#ItsDenm_TestCases.TC_DEN_MSRV_BV_07
# Check that receiving ITS-S discards DENM for new event if SSP value of the signing certificate is not consistent with the causeCode
#ItsDenm_TestCases.TC_DEN_MSRV_BO_08_01
# Check that receiving ITS-S discards DENM for new event if SSP value of the signing certificate is not consistent with the causeCode
#ItsDenm_TestCases.TC_DEN_MSRV_BO_08_02
# Check that receiving ITS-S discards DENM for existing event if SSP value of the signing certificate is not consistent with the causeCode
#ItsDenm_TestCases.TC_DEN_MSRV_BO_09_01
# Check that receiving ITS-S discards DENM for existing event if SSP value of the signing certificate is not consistent with the causeCode
#ItsDenm_TestCases.TC_DEN_MSRV_BO_09_02
# Check that receiving ITS-S replies to requestResponseIndication
#ItsDenm_TestCases.TC_DEN_MSRV_BV_10
# Check that forwarding ITS-S forwards DENM if no DENM with same ActionId has been received during forwarding delay
#ItsDenm_TestCases.TC_DEN_KAFW_BV_01
# Check that forwarding ITS-S forwards DENM if no DENM with same ActionId and referenceTime greater or equal to the last received DENM has been received during forwarding delay
#ItsDenm_TestCases.TC_DEN_KAFW_BV_02
# Check that forwarding delay is set to min(2*transmissionInterval + rnd(0, 150ms), validityDuration)
#ItsDenm_TestCases.TC_DEN_KAFW_TI_03
# Check that Forwarding ITS-S replaces the ITS PDU header of forwarded DENMs
#ItsDenm_TestCases.TC_DEN_KAFW_BV_04
# Check that forwarding ITS-S does not change actionID
#ItsDenm_TestCases.TC_DEN_KAFW_BV_05
# Check that forwarding ITS-S does not change referenceTime
#ItsDenm_TestCases.TC_DEN_KAFW_BV_06
# Check that forwarding ITS-S does not change termination
#ItsDenm_TestCases.TC_DEN_KAFW_BV_07
# Check that Forwarding ITS-S does not modify management, situation, location and alacarte containers when forwarding a DENM
#ItsDenm_TestCases.TC_DEN_KAFW_BV_08
# Check that forwarding ITS-S stops forwarding DENM after validity expiration
#ItsDenm_TestCases.TC_DEN_KAFW_BV_09
# Check that forwarding ITS-S stops forwarding DENM if it is outside relevance area
#ItsDenm_TestCases.TC_DEN_KAFW_BV_10
# Check that forwarding ITS-S does not forward DENM is transmissionInterval is not present
#ItsDenm_TestCases.TC_DEN_KAFW_BV_11

[MAIN_CONTROLLER]
# The options herein control the behavior of MC.
KillTimer := 10.0
LocalAddress := 127.0.0.1
TCPPort := 12000
NumHCs := 1
