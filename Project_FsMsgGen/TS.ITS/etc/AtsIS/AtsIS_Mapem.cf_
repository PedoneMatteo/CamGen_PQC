
[MODULE_PARAMETERS]
# This section shall contain the values of all parameters that are defined in your TTCN-3 modules.

# IUT Station ID
LibItsCommon_Pixits.PX_IUT_STATION_ID := 2533729309

LibItsGeoNetworking_Pixits.PX_GN_UPPER_LAYER := e_btpB
LibItsMapemSpatem_Pics.PICS_IS_IUT_SECURED := false

[LOGGING]
# In this section you can specify the name of the log file and the classes of events
# you want to log into the file or display on console (standard error).

LogFile := "../logs/AtsIS/%e.%h-%r.%s"
FileMask := LOG_ALL | USER | DEBUG | MATCHING
ConsoleMask := LOG_ALL | USER | DEBUG | MATCHING
#FileMask := ERROR | USER | MATCHING | EXECUTOR_RUNTIME | VERDICTOP
#ConsoleMask := ERROR | USER | MATCHING | EXECUTOR_RUNTIME | VERDICTOP
LogSourceInfo := Stack
LogEntityName:= Yes
LogEventTypes:= Yes
#TimeStampFormat := DateTime

[TESTPORT_PARAMETERS]
# In this section you can specify parameters that are passed to Test Ports.
# MAPEM Layer
#   next_header     : btpA|btpB (overwrite BTP.type)
#   header_type     : tsb|gbc|uni
#   header_sub_type : sh (single hop)
# MAPEM Layer
#   next_header     : btpA|btpB (overwrite BTP.type)
# BTP Layer
#   type            : btpA|btpB
#   destination port: dst_port
#   source port     : src_port
#   device_mode     : Set to 1 if the layer shall encapsulate upper layer PDU
#   device_mode     : Set to 1 if the layer shall encapsulate upper layer PDU
# GN Layer
#   ll_address             : GeoNetworking address of the Test System
#   latitude               : latitude of the Test System
#   longitude              : longitude of the Test System
#   beaconing              : Set to 1 if GnLayer shall start beaconing
#   Beaconning timer expiry: expiry (ms)
#   device_mode            : Set to 1 if the layer shall encapsulate upper layer PDU
#   secured_mode           : Set to 1 if message exchanges shall be signed
#   encrypted_mode         : Set to 1 if message exchanges shall be encrypted
#                            NOTE: For signed & encrypted message exchanges, both secured_mode and encrypted_mode shall be set to 1
#   secure_db_path         : Path to the certificates and keys storage location
#   hash                   : Hash algorithm to be used when secured mode is set
#                            Authorized values are SHA-256 or SHA-384
#                            Default: SHA-256
#   cypher                 : Cyphering algorithm to be used when secured mode is set
#                            Authorized values are NISTP-256 and BP-256
#                            Default: NISTP-256
# Ethernet layer
#   mac_src  :Source MAC address
#   mac_bc   :Broadcast address
#   eth_type : Ethernet type
# Commsignia layer
#   mac_src     : Device MAC address, used to discard packets
#                 To indicate no filering, use the value 000000000000
#   mac_bc      : Broadcast address
#   eth_type    : Ethernet type, used to discard packets
#   target_host : Device address
#   target_port : Device port
#   source_port : Test System port
#   interface_id: Interface id, used to discard packets
#   tx_power    : TX power (dB)
# UDP layer (IP/UDP based on Pcap)
#   dst_ip  : destination IPv4 address (aa.bb.cc.dd)
#   dst_port: destination port
#   src_ip  : source IPv4 address (aa.bb.cc.dd)
#   src_port: source port
# Pcap layer
#   mac_src    : Source MAC address, used to exclude from capture the acket sent by the Test System
#   filter     : Pcap filter (compliant with tcpdump syntax) 
#   Online mode:
#     nic: Local NIC
#          If set, online mode is used
#   Offline mode (nic is present but not set):
#     file        : File to read
#     frame_offset: Frame offset, used to skip packets with frame number < frame_offset
#     time_offset : Time offset, used to skip packets with time offset < time_offset
#     save_mode   : 1 to save sent packet, 0 otherwise

#Cygwin
#system.mapemSpatemPort.params := "MAPEM(next_header=btpB,header_type=uni)/BTP(dst_port=2006)/GN(ll_address=4C5E0C14D2EA,latitude=43551050,longitude=10298730,distanceA=1500,distanceB=1500,angle=0,device_mode=1,secured_mode=0,sec_db_path=/home/yanng/tmp/certificates)/ETH(mac_src=e2b7b30429eb)/PCAP(mac_src=e2b7b30429eb,nic=CEBB111F-D749-4B40-8B4D-DBB060E90987,filter=and ether proto 0x8947)"
# Linux
#    ETH
#system.mapemSpatemPort.params := "MapemSpatem(next_header=btpB,header_type=gbc)/BTP(dst_port=2006)/GN(ll_address=4C5E0C14D2EA,latitude=43551050,longitude=10298730,distanceA=1500,distanceB=1500,angle=0,device_mode=1,secured_mode=0,sec_db_path=../data/certificates/certificates)/ETH(mac_src=dc536045af7f)/PCAP(mac_src=dc536045af7f,nic=enx00e07cc91967,filter=and ether proto 0x8947)"
#    WiFi
#system.mapemSpatemPort.params := "MapemSpatem(next_header=btpB,header_type=gbc)/BTP(dst_port=2006)/GN(ll_address=4C5E0C14D2EA,latitude=43551050,longitude=10298730,distanceA=1500,distanceB=1500,angle=0,device_mode=1,secured_mode=1,sec_db_path=../data/certificates/certificates)/ETH(mac_src=dc536045af7e)/PCAP(mac_src=dc536045af7e,nic=wlp0s20f3,filter=and ether proto 0x8947)"
# Linux over UDP
system.mapemSpatemPort.params := "MapemSpatem(next_header=btpB,header_type=gbc)/BTP(dst_port=2006)/GN(ll_address=4C5E0C14D2EA,latitude=43551050,longitude=10298730,distanceA=1500,distanceB=1500,angle=0,device_mode=0,secured_mode=0,sec_db_path=../data/certificates/certificates)/ETH(mac_src=dc536045af7f)/UDP(dst_ip=81.47.99.165,src_port=4041,dst_port=50544)"

# MAPEM UpperTester port based on UDP
system.utPort.params := "UT_MAPEMSPATEM/UDP(dst_ip=81.47.99.165)" #,dst_port=12346,src_port=12346)"

[EXECUTE]

#ItsMapem_TestCases.TC_IS_RLT_xxx_BV_01

# Check that protocolVersion is set to 1 and messageID is set to 4
#ItsMapem_TestCases.TC_IS_RLT_GEN_MSGF_BV_01
# Check that the intersection information revision number is changed when the intersection  configuration is changed.
ItsMapem_TestCases.TC_IS_RLT_GEN_MSGF_BV_02
# Check that the intersection information revision number is not changed when the intersection configuration is still the same.
#ItsMapem_TestCases.TC_IS_RLT_GEN_MSGF_BV_03
# Check that RLT Service transmits MAPEM with the valid connection trajectories.
#ItsMapem_TestCases.TC_IS_RLT_GEN_MSGF_BV_04
# Check that reference point altitude is encoded using regional extension.
#ItsMapem_TestCases.TC_IS_RLT_GEN_MSGF_BV_05
# Check that each lane of the intersection contains a unique number.
#ItsMapem_TestCases.TC_IS_RLT_GEN_MSGF_BV_06
# Check that the number of nodes needed to represent the path of a lane is selected such that the perpendicular distance between the lane centre line and the straight line connecting the two consecutive nodes is less than 1 m.
#ItsMapem_TestCases.TC_IS_RLT_GEN_MSGF_BV_07
# Check that each vehicular lane of the intersection includes only allowed manoeuvres and vehicle types.
#ItsMapem_TestCases.TC_IS_RLT_GEN_MSGF_BV_08
# Check that each pedestrian lane of the intersection includes only allowed manoeuvres and user types.
#ItsMapem_TestCases.TC_IS_RLT_GEN_MSGF_BV_09
# Check that each special lane of the intersection includes only allowed manoeuvres and user types.
#ItsMapem_TestCases.TC_IS_RLT_GEN_MSGF_BV_10
# Check that each crosswalk lane of the intersection does not have ingress or egress approaches and includes only valid user types.
#ItsMapem_TestCases.TC_IS_RLT_GEN_MSGF_BV_11
# Check that each lane information contain lane width or default lane width is provided.
#ItsMapem_TestCases.TC_IS_RLT_GEN_MSGF_BV_12
# Check that default lane width is not included in the RTL message if each lane information contains lane width.
#ItsMapem_TestCases.TC_IS_RLT_GEN_MSGF_BV_13
# Check that possible manoevers are encoded in connectsTo data element.
#ItsMapem_TestCases.TC_IS_RLT_GEN_MSGF_BV_14
# An IUT shall broadcast the signal group identifier, the lanes/approaches associated with the signal group, and the lanes/approachesâ€™ allowable manoeuvres.
#ItsMapem_TestCases.TC_IS_RLT_GEN_MSGF_BV_15
# Check that lanes which are crossed by a crosswalk shall use the same ingressApproach egressApproach identifier.
#ItsMapem_TestCases.TC_IS_RLT_GEN_MSGF_BV_16
# Check that RLT Service transmits MAPEM without data elements not used in ETSI architecture
#ItsMapem_TestCases.TC_IS_RLT_GEN_MSGF_BV_17

# Check that IVI Service generates a new MAPEM on reception of a valid AppMAPEM_Trigger request
#ItsMapem_TestCases.TC_IS_RLT_EVGN_BV_01
# Check that RLT Service transmits new content
#ItsMapem_TestCases.TC_IS_RLT_EVGN_BV_02
# Check that RLT Service transmits non-fragmented MAPEM without the Layer ID.
#ItsMapem_TestCases.TC_IS_RLT_GEN_FRAG_BV_01
# Check that RLT Service transmits fragmented MAPEM when the message size exceeds the allowed message length 
#ItsMapem_TestCases.TC_IS_RLT_GEN_FRAG_BV_02

# Check that the RLT Service transmits continuously both MAPEM and SPATEM.
#ItsMapem_TestCases.TC_IS_RLT_GEN_COM_BV_01
# Check that the destination port for MAPEM is set to 2003
#ItsMapem_TestCases.TC_IS_RLT_GEN_COM_BV_03
# Check that MAPEM uses BTP_B packet 
# Check that the destination port for MAPEM is set to 2003 
#ItsMapem_TestCases.TC_IS_RLT_GEN_COM_BV_04
# Check that TLM service encapsulates MAPEM in a GBC with the HeaderType field set to the value of 4
#ItsMapem_TestCases.TC_IS_RLT_GEN_COM_BV_05

# Check that RLT service uses certificate containing valid ITS AID to sign MAPEM messages.
#ItsMapem_TestCases.TC_IS_RLT_GEN_SEC_BV_01
# Check that TLM service uses generic security profile to sign MAPEM message and does not include additional security header elements.
#ItsMapem_TestCases.TC_IS_RLT_GEN_SEC_BV_02
# Check that RLT service uses certificate containing valid Service Specific Permissions of type BitmapSsp to sign MAPEM messages and the SSP version is set to 1.
#ItsMapem_TestCases.TC_IS_RLT_GEN_SSP_BV_01
# Check that RLT service sends a MAPEM message containing intersections when it is permitted by the signing certificate.
#ItsMapem_TestCases.TC_IS_RLT_GEN_SSP_BV_02
# Check that RLT service does not send a MAPEM message containing intersections if it is not permitted by the certificate.
#ItsMapem_TestCases.TC_IS_RLT_GEN_SSP_BO_03
# Check that RLT service sends a MAPEM message containing roadSegments when it is permitted by the signing certificate.
#ItsMapem_TestCases.TC_IS_RLT_GEN_SSP_BV_04
# Check that RLT service does not send a MAPEM message containing roadSegments if it is not permitted by the certificate.
#ItsMapem_TestCases.TC_IS_RLT_GEN_SSP_BO_05
# Check that RLT service sends a MAPEM message containing roadSegments when it is permitted by the signing certificate.
#ItsMapem_TestCases.TC_IS_RLT_GEN_RATE_BV_01
# Check that the IUT can successfully process all mandatory fields of MAPEM received
#ItsMapem_TestCases.TC_IS_RLT_GEN_RCV_BV_03
# Check that the IUT accepts the MAPEM signed with valid certificate
#ItsMapem_TestCases.TC_IS_RLT_RCV_SEC_BV_01
# Check that the IUT skips the MAPEM signed with certificate without permissions to sign MAPEM.
#ItsMapem_TestCases.TC_IS_RLT_RCV_SEC_BO_02
# Check that the IUT skips the MAPEM containing intersections signed with certificate without service specific permissions (SSP) to sign such a MAPEM
#ItsMapem_TestCases.TC_IS_RLT_RCV_SEC_BO_03       
# Check that the IUT skips the MAPEM containing roadSegments signed with certificate
#ItsMapem_TestCases.TC_IS_RLT_RCV_SEC_BO_04

[MAIN_CONTROLLER]
# The options herein control the behavior of MC.
KillTimer := 10.0
LocalAddress := 127.0.0.1
TCPPort := 12000
NumHCs := 1
