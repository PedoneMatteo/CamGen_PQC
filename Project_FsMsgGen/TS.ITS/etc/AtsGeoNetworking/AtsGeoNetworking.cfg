
[MODULE_PARAMETERS]
# This section shall contain the values of all parameters that are defined in your TTCN-3 modules.

# The GeoNetworking address of the IUT.
LibItsGeoNetworking_Pics.PICS_GN_LOCAL_GN_ADDR := {
  typeOfAddress := e_manual,
  stationType := e_roadSideUnit,
  reserved := 49,
  mid := '001C6B0D0201'O
}

LibItsGeoNetworking_Pics.PICS_GN_IS_MOBILE := true
LibItsGeoNetworking_Pics.PICS_GN_DEFAULT_HOP_LIMIT := 10
LibItsGeoNetworking_Pics.PICS_GN_SECURITY := false

LibItsGeoNetworking_Pixits.PX_GN_UPPER_LAYER := e_any
LibItsGeoNetworking_Pixits.PX_NEIGHBOUR_DISCOVERY_DELAY := 3.0

[LOGGING]
# In this section you can specify the name of the log file and the classes of events
# you want to log into the file or display on console (standard error).

LogFile := "../logs/AtsGeoNetworking/%e.%h-%r.%s"
FileMask := LOG_ALL | USER | DEBUG | MATCHING
ConsoleMask := LOG_ALL | USER | DEBUG | MATCHING
#FileMask := ERROR | USER | MATCHING | EXECUTOR_RUNTIME | VERDICTOP
#ConsoleMask := ERROR | USER | MATCHING | EXECUTOR_RUNTIME | VERDICTOP
LogSourceInfo := Stack
LogEntityName:= Yes
LogEventTypes:= Yes
#TimeStampFormat := DateTime

[TESTPORT_PARAMETERS]
# In this section you can specify parameters that are passed to Test Ports.
# CAM Layer
#   next_header     : btpA|btpB (overwrite BTP.type)
#   header_type     : tsb|gbc
#   header_sub_type : sh (single hop)
# DENM Layer
#   next_header     : btpA|btpB (overwrite BTP.type)
#   header_type     : tsb|gbc
# BTP Layer
#   type            : btpA|btpB
#   destination port: dst_port
#   source port     : src_port
#   device_mode     : Set to 1 if the layer shall encapsulate upper layer PDU
#   device_mode     : Set to 1 if the layer shall encapsulate upper layer PDU
# GN Layer
#   ll_address             : GeoNetworking address of the Test System
#   latitude               : Latitude of the Test System
#   longitude              : Longitude of the Test System
#   beaconing              : Set to 1 if GnLayer shall start beaconing
#   expiry                 : Beaconning timer expiry (ms)
#   device_mode            : Set to 1 if the layer shall encapsulate upper layer PDU
#   secured_mode           : Set to 1 if message exchanges shall be signed
#   encrypted_mode         : Set to 1 if message exchanges shall be encrypted
#                            NOTE: For signed & encrypted message exchanges, both secured_mode and encrypted_mode shall be set to 1
#   sec_db_path            : Path to the certificates and keys storage location
#   hash                   : Hash algorithm to be used when secured mode is set
#                            Authorized values are SHA-256 or SHA-384
#                            Default: SHA-256
#   cypher                 : Cyphering algorithm to be used when secured mode is set
#                            Authorized values are NISTP-256 and BP-256
#                            Default: NISTP-256
# Ethernet layer
#   mac_src  :Source MAC address
#   mac_bc   :Broadcast address
#   eth_type : Ethernet type
# Commsignia layer
#   mac_src     : Device MAC address, used to discard packets
#                 To indicate no filering, use the value 000000000000
#   mac_bc      : Broadcast address
#   eth_type    : Ethernet type, used to discard packets
#   target_host : Device address
#   target_port : Device port
#   source_port : Test System port
#   interface_id: Interface id, used to discard packets
#   tx_power    : TX power (dB)
# UDP layer (IP/UDP based on Pcap)
#   dst_ip  : Destination IPv4 address (aa.bb.cc.dd)
#   dst_port: Destination port
#   src_ip  : Source IPv4 address (aa.bb.cc.dd)
#   src_port: Source port
# Pcap layer
#   mac_src    : Source MAC address, used to exclude from capture the acket sent by the Test System
#   filter     : Pcap filter (compliant with tcpdump syntax) 
#   Online mode:
#     nic: Local NIC
#          If set, online mode is used
#   Offline mode (nic is present but not set):
#     file        : File to read
#     frame_offset: Frame offset, used to skip packets with frame number < frame_offset
#     time_offset : Time offset, used to skip packets with time offset < time_offset
#     save_mode   : Set to 1 to save sent packet, 0 otherwise

# Single GeoNetworking component port
mtc.geoNetworkingPort.params := "GN(ll_address=00000000000B,latitude=515340240,longitude=139274330)/ETH(mac_src=080027500f9b)/PCAP(mac_src=080027500f9b,nic=wlp0s20f3,filter=and ether proto 0x8947)"

# Multiple GeoNetworking component portN
NodeA.geoNetworkingPort.params := "GN(ll_address=00000000000A,latitude=515340240,longitude=139274330)/ETH(mac_src=080027500f9a)/PCAP(mac_src=080027500f9a,nic=wlp0s20f3,filter=and ether proto 0x8947)"
NodeB.geoNetworkingPort.params := "GN(ll_address=00000000000B,latitude=515340240,longitude=139274330)/ETH(mac_src=080027500f9b)/PCAP(mac_src=080027500f9b,nic=wlp0s20f3,filter=and ether proto 0x8947)"
NodeC.geoNetworkingPort.params := "GN(ll_address=00000000000C,latitude=515340240,longitude=139274330)/ETH(mac_src=080027500f9c)/PCAP(mac_src=080027500f9c,nic=wlp0s20f3,filter=and ether proto 0x8947)"
NodeD.geoNetworkingPort.params := "GN(ll_address=00000000000D,latitude=515340240,longitude=139274330)/ETH(mac_src=080027500f9d)/PCAP(mac_src=080027500f9d,nic=wlp0s20f3,filter=and ether proto 0x8947 and not ether src 8c554ac1eee1)" 

# UpperTester port based on UDP
#system.utPort.params := "UT_GN/UDP(dst_ip=192.168.2.2)"
mtc.utPort.params := "UT_GN/UDP(dst_ip=192.168.1.43,dst_port=12345,src_port=12346)"
#NodeA.utPort.params := "UT_GN/UDP(dst_ip=192.168.1.43,dst_port=12345,src_port=12346)"
NodeB.utPort.params := "UT_GN/UDP(dst_ip=192.168.1.43,dst_port=12345,src_port=12346)"
#NodeC.utPort.params := "UT_GN/UDP(dst_ip=192.168.1.43,dst_port=12345,src_port=12346)"
NodeD.utPort.params := "UT_GN/UDP(dst_ip=192.168.1.43,dst_port=12345,src_port=12346)"

[EXECUTE]
#ItsGeoNetworking_TestCases.TC_GEONW_FDV_BAH_BV_01
#ItsGeoNetworking_TestCases.TC_GEONW_FDV_COH_BV_01
#ItsGeoNetworking_TestCases.TC_GEONW_FDV_COH_BV_02
#ItsGeoNetworking_TestCases.TC_GEONW_FDV_COH_BV_03
#ItsGeoNetworking_TestCases.TC_GEONW_FDV_COH_BO_04
#ItsGeoNetworking_TestCases.TC_GEONW_FDV_BEA_BV_01
#ItsGeoNetworking_TestCases.TC_GEONW_FDV_BEA_BV_02
#ItsGeoNetworking_TestCases.TC_GEONW_FDV_BEA_BV_03
#ItsGeoNetworking_TestCases.TC_GEONW_FDV_BEA_BV_04
#ItsGeoNetworking_TestCases.TC_GEONW_FDV_GUC_BV_01
#ItsGeoNetworking_TestCases.TC_GEONW_FDV_GBC_BV_01
#ItsGeoNetworking_TestCases.TC_GEONW_FDV_GAC_BV_01
#ItsGeoNetworking_TestCases.TC_GEONW_FDV_SHB_BV_01
#ItsGeoNetworking_TestCases.TC_GEONW_FDV_TSB_BV_01
#ItsGeoNetworking_TestCases.TC_GEONW_PON_SHB_BV_01
#ItsGeoNetworking_TestCases.TC_GEONW_PON_SHB_BV_05
#ItsGeoNetworking_TestCases.TC_GEONW_PON_TSB_BV_01
#ItsGeoNetworking_TestCases.TC_GEONW_PON_TSB_BV_05
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOT_BV_01
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOT_BV_02
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOT_BV_03_01
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOT_BV_03_02
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOT_BV_03_03
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOT_BV_03_04
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOT_BV_03_05
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOT_BV_03_06
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOT_BV_03_07
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOT_BV_03_08
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOT_BV_04
#ItsGeoNetworking_TestCases.TC_GEONW_PON_SQN_BV_01
#ItsGeoNetworking_TestCases.TC_GEONW_PON_SQN_BV_02
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOS_BV_01
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOS_BV_02
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOS_BV_03
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOS_BV_04
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOS_BV_05
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOS_TI_06
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOS_BV_07
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOS_BV_08
ItsGeoNetworking_TestCases.TC_GEONW_PON_LOS_BO_09
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOS_BV_10
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOS_BV_11
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOS_BV_12
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOS_BV_13
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOS_BV_14
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOS_BV_15
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOS_BV_16
#ItsGeoNetworking_TestCases.TC_GEONW_PON_LOS_BV_17
#ItsGeoNetworking_TestCases.TC_GEONW_PON_FPB_BV_01
#ItsGeoNetworking_TestCases.TC_GEONW_PON_FPB_BV_02
#ItsGeoNetworking_TestCases.TC_GEONW_PON_FPB_BV_03
#ItsGeoNetworking_TestCases.TC_GEONW_PON_FPB_BV_04
#ItsGeoNetworking_TestCases.TC_GEONW_PON_FPB_BV_06
#ItsGeoNetworking_TestCases.TC_GEONW_PON_FPB_BV_07
#ItsGeoNetworking_TestCases.TC_GEONW_PON_FPB_BV_08
#ItsGeoNetworking_TestCases.TC_GEONW_PON_FPB_BV_09
#ItsGeoNetworking_TestCases.TC_GEONW_PON_FPB_BV_10
#ItsGeoNetworking_TestCases.TC_GEONW_PON_FPB_BV_11
#ItsGeoNetworking_TestCases.TC_GEONW_PON_FPB_BV_12
#ItsGeoNetworking_TestCases.TC_GEONW_PON_GNA_BV_01
#ItsGeoNetworking_TestCases.TC_GEONW_PON_GNA_BV_02
#ItsGeoNetworking_TestCases.TC_GEONW_PON_BEA_TI_01
#ItsGeoNetworking_TestCases.TC_GEONW_PON_BEA_TI_02
#ItsGeoNetworking_TestCases.TC_GEONW_PON_GUC_BV_01
#ItsGeoNetworking_TestCases.TC_GEONW_PON_GUC_BV_02
#ItsGeoNetworking_TestCases.TC_GEONW_PON_GUC_BV_03
#ItsGeoNetworking_TestCases.TC_GEONW_PON_GUC_BO_04
#ItsGeoNetworking_TestCases.TC_GEONW_PON_GUC_BV_05
#ItsGeoNetworking_TestCases.TC_GEONW_PON_GUC_BV_06
#ItsGeoNetworking_TestCases.TC_GEONW_PON_GUC_BV_07
#ItsGeoNetworking_TestCases.TC_GEONW_PON_GUC_BV_08
#ItsGeoNetworking_TestCases.TC_GEONW_PON_GUC_BV_10
#ItsGeoNetworking_TestCases.TC_GEONW_PON_GUC_BV_11
#ItsGeoNetworking_TestCases.TC_GEONW_PON_GUC_BO_12
#ItsGeoNetworking_TestCases.TC_GEONW_PON_GUC_BO_13

#ItsGeoNetworking_TestCases.TC_GEONW_PON_GBC_BV_01


#ItsGeoNetworking_TestCases.TC_GEONW_CAP_FPB_BV_01

[MAIN_CONTROLLER]
# The options herein control the behavior of MC.
KillTimer := 10.0
LocalAddress := 127.0.0.1
TCPPort := 12000
NumHCs := 1

